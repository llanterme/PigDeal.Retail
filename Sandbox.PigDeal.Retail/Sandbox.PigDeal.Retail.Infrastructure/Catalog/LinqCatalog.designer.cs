#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sandbox.PigDeal.Retail.Infrastructure.Catalog
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PigDeal")]
	public partial class LinqCatalogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertDeal(Deal instance);
    partial void UpdateDeal(Deal instance);
    partial void DeleteDeal(Deal instance);
    partial void InsertCoupon(Coupon instance);
    partial void UpdateCoupon(Coupon instance);
    partial void DeleteCoupon(Coupon instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertOutlet(Outlet instance);
    partial void UpdateOutlet(Outlet instance);
    partial void DeleteOutlet(Outlet instance);
    #endregion
		
		
		public LinqCatalogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqCatalogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqCatalogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqCatalogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Deal> Deals
		{
			get
			{
				return this.GetTable<Deal>();
			}
		}
		
		public System.Data.Linq.Table<Coupon> Coupons
		{
			get
			{
				return this.GetTable<Coupon>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Outlet> Outlets
		{
			get
			{
				return this.GetTable<Outlet>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branches")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _PostCode;
		
		private string _Description;
		
		private string _OperatingHours;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private int _BranchId;
		
		private int _OutletId;
		
		private EntitySet<Deal> _Deals;
		
		private EntityRef<Outlet> _Outlet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOperatingHoursChanging(string value);
    partial void OnOperatingHoursChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnOutletIdChanging(int value);
    partial void OnOutletIdChanged();
    #endregion
		
		public Branch()
		{
			this._Deals = new EntitySet<Deal>(new Action<Deal>(this.attach_Deals), new Action<Deal>(this.detach_Deals));
			this._Outlet = default(EntityRef<Outlet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(200)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingHours", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string OperatingHours
		{
			get
			{
				return this._OperatingHours;
			}
			set
			{
				if ((this._OperatingHours != value))
				{
					this.OnOperatingHoursChanging(value);
					this.SendPropertyChanging();
					this._OperatingHours = value;
					this.SendPropertyChanged("OperatingHours");
					this.OnOperatingHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletId", DbType="Int NOT NULL")]
		public int OutletId
		{
			get
			{
				return this._OutletId;
			}
			set
			{
				if ((this._OutletId != value))
				{
					if (this._Outlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutletIdChanging(value);
					this.SendPropertyChanging();
					this._OutletId = value;
					this.SendPropertyChanged("OutletId");
					this.OnOutletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Deal", Storage="_Deals", ThisKey="BranchId", OtherKey="BranchId")]
		public EntitySet<Deal> Deals
		{
			get
			{
				return this._Deals;
			}
			set
			{
				this._Deals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Outlet_Branch", Storage="_Outlet", ThisKey="OutletId", OtherKey="OutletId", IsForeignKey=true)]
		public Outlet Outlet
		{
			get
			{
				return this._Outlet.Entity;
			}
			set
			{
				Outlet previousValue = this._Outlet.Entity;
				if (((previousValue != value) 
							|| (this._Outlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Outlet.Entity = null;
						previousValue.Branches.Remove(this);
					}
					this._Outlet.Entity = value;
					if ((value != null))
					{
						value.Branches.Add(this);
						this._OutletId = value.OutletId;
					}
					else
					{
						this._OutletId = default(int);
					}
					this.SendPropertyChanged("Outlet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deals(Deal entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Deals(Deal entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deals")]
	public partial class Deal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OutletId;
		
		private int _DealId;
		
		private int _BranchId;
		
		private string _Title;
		
		private int _Claimed;
		
		private string _Scoop;
		
		private string _Discount;
		
		private string _Created;
		
		private string _StartDate;
		
		private string _StartTime;
		
		private string _Duration;
		
		private string _Status;
		
		private int _Payment;
		
		private EntitySet<Coupon> _Coupons;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Outlet> _Outlet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutletIdChanging(int value);
    partial void OnOutletIdChanged();
    partial void OnDealIdChanging(int value);
    partial void OnDealIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnClaimedChanging(int value);
    partial void OnClaimedChanged();
    partial void OnScoopChanging(string value);
    partial void OnScoopChanged();
    partial void OnDiscountChanging(string value);
    partial void OnDiscountChanged();
    partial void OnCreatedChanging(string value);
    partial void OnCreatedChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPaymentChanging(int value);
    partial void OnPaymentChanged();
    #endregion
		
		public Deal()
		{
			this._Coupons = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupons), new Action<Coupon>(this.detach_Coupons));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Branch = default(EntityRef<Branch>);
			this._Outlet = default(EntityRef<Outlet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletId", DbType="Int NOT NULL")]
		public int OutletId
		{
			get
			{
				return this._OutletId;
			}
			set
			{
				if ((this._OutletId != value))
				{
					if (this._Outlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutletIdChanging(value);
					this.SendPropertyChanging();
					this._OutletId = value;
					this.SendPropertyChanged("OutletId");
					this.OnOutletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DealId
		{
			get
			{
				return this._DealId;
			}
			set
			{
				if ((this._DealId != value))
				{
					this.OnDealIdChanging(value);
					this.SendPropertyChanging();
					this._DealId = value;
					this.SendPropertyChanged("DealId");
					this.OnDealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claimed", DbType="Int NOT NULL")]
		public int Claimed
		{
			get
			{
				return this._Claimed;
			}
			set
			{
				if ((this._Claimed != value))
				{
					this.OnClaimedChanging(value);
					this.SendPropertyChanging();
					this._Claimed = value;
					this.SendPropertyChanged("Claimed");
					this.OnClaimedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scoop", DbType="VarChar(5000) NOT NULL", CanBeNull=false)]
		public string Scoop
		{
			get
			{
				return this._Scoop;
			}
			set
			{
				if ((this._Scoop != value))
				{
					this.OnScoopChanging(value);
					this.SendPropertyChanging();
					this._Scoop = value;
					this.SendPropertyChanged("Scoop");
					this.OnScoopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Int NOT NULL")]
		public int Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deal_Coupon", Storage="_Coupons", ThisKey="DealId", OtherKey="DealId")]
		public EntitySet<Coupon> Coupons
		{
			get
			{
				return this._Coupons;
			}
			set
			{
				this._Coupons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deal_Invoice", Storage="_Invoices", ThisKey="DealId", OtherKey="DealId")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Deal", Storage="_Branch", ThisKey="BranchId", OtherKey="BranchId", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Deals.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Deals.Add(this);
						this._BranchId = value.BranchId;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Outlet_Deal", Storage="_Outlet", ThisKey="OutletId", OtherKey="OutletId", IsForeignKey=true)]
		public Outlet Outlet
		{
			get
			{
				return this._Outlet.Entity;
			}
			set
			{
				Outlet previousValue = this._Outlet.Entity;
				if (((previousValue != value) 
							|| (this._Outlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Outlet.Entity = null;
						previousValue.Deals.Remove(this);
					}
					this._Outlet.Entity = value;
					if ((value != null))
					{
						value.Deals.Add(this);
						this._OutletId = value.OutletId;
					}
					else
					{
						this._OutletId = default(int);
					}
					this.SendPropertyChanged("Outlet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coupons(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Deal = this;
		}
		
		private void detach_Coupons(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Deal = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Deal = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Deal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupons")]
	public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DealId;
		
		private string _DeviceIdentifier;
		
		private int _CouponId;
		
		private string _UserReference;
		
		private EntityRef<Deal> _Deal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDealIdChanging(int value);
    partial void OnDealIdChanged();
    partial void OnDeviceIdentifierChanging(string value);
    partial void OnDeviceIdentifierChanged();
    partial void OnCouponIdChanging(int value);
    partial void OnCouponIdChanged();
    partial void OnUserReferenceChanging(string value);
    partial void OnUserReferenceChanged();
    #endregion
		
		public Coupon()
		{
			this._Deal = default(EntityRef<Deal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealId", DbType="Int NOT NULL")]
		public int DealId
		{
			get
			{
				return this._DealId;
			}
			set
			{
				if ((this._DealId != value))
				{
					if (this._Deal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealIdChanging(value);
					this.SendPropertyChanging();
					this._DealId = value;
					this.SendPropertyChanged("DealId");
					this.OnDealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceIdentifier", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DeviceIdentifier
		{
			get
			{
				return this._DeviceIdentifier;
			}
			set
			{
				if ((this._DeviceIdentifier != value))
				{
					this.OnDeviceIdentifierChanging(value);
					this.SendPropertyChanging();
					this._DeviceIdentifier = value;
					this.SendPropertyChanged("DeviceIdentifier");
					this.OnDeviceIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CouponId
		{
			get
			{
				return this._CouponId;
			}
			set
			{
				if ((this._CouponId != value))
				{
					this.OnCouponIdChanging(value);
					this.SendPropertyChanging();
					this._CouponId = value;
					this.SendPropertyChanged("CouponId");
					this.OnCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserReference", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserReference
		{
			get
			{
				return this._UserReference;
			}
			set
			{
				if ((this._UserReference != value))
				{
					this.OnUserReferenceChanging(value);
					this.SendPropertyChanging();
					this._UserReference = value;
					this.SendPropertyChanged("UserReference");
					this.OnUserReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deal_Coupon", Storage="_Deal", ThisKey="DealId", OtherKey="DealId", IsForeignKey=true)]
		public Deal Deal
		{
			get
			{
				return this._Deal.Entity;
			}
			set
			{
				Deal previousValue = this._Deal.Entity;
				if (((previousValue != value) 
							|| (this._Deal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deal.Entity = null;
						previousValue.Coupons.Remove(this);
					}
					this._Deal.Entity = value;
					if ((value != null))
					{
						value.Coupons.Add(this);
						this._DealId = value.DealId;
					}
					else
					{
						this._DealId = default(int);
					}
					this.SendPropertyChanged("Deal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceId;
		
		private int _DealId;
		
		private int _OutletId;
		
		private string _DatePaid;
		
		private string _Amount;
		
		private string _InvoiceNumber;
		
		private int _Furfilled;
		
		private EntityRef<Deal> _Deal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIdChanging(int value);
    partial void OnInvoiceIdChanged();
    partial void OnDealIdChanging(int value);
    partial void OnDealIdChanged();
    partial void OnOutletIdChanging(int value);
    partial void OnOutletIdChanged();
    partial void OnDatePaidChanging(string value);
    partial void OnDatePaidChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnFurfilledChanging(int value);
    partial void OnFurfilledChanged();
    #endregion
		
		public Invoice()
		{
			this._Deal = default(EntityRef<Deal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealId", DbType="Int NOT NULL")]
		public int DealId
		{
			get
			{
				return this._DealId;
			}
			set
			{
				if ((this._DealId != value))
				{
					if (this._Deal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDealIdChanging(value);
					this.SendPropertyChanging();
					this._DealId = value;
					this.SendPropertyChanged("DealId");
					this.OnDealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletId", DbType="Int NOT NULL")]
		public int OutletId
		{
			get
			{
				return this._OutletId;
			}
			set
			{
				if ((this._OutletId != value))
				{
					this.OnOutletIdChanging(value);
					this.SendPropertyChanging();
					this._OutletId = value;
					this.SendPropertyChanged("OutletId");
					this.OnOutletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePaid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DatePaid
		{
			get
			{
				return this._DatePaid;
			}
			set
			{
				if ((this._DatePaid != value))
				{
					this.OnDatePaidChanging(value);
					this.SendPropertyChanging();
					this._DatePaid = value;
					this.SendPropertyChanged("DatePaid");
					this.OnDatePaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Furfilled", DbType="Int NOT NULL")]
		public int Furfilled
		{
			get
			{
				return this._Furfilled;
			}
			set
			{
				if ((this._Furfilled != value))
				{
					this.OnFurfilledChanging(value);
					this.SendPropertyChanging();
					this._Furfilled = value;
					this.SendPropertyChanged("Furfilled");
					this.OnFurfilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deal_Invoice", Storage="_Deal", ThisKey="DealId", OtherKey="DealId", IsForeignKey=true)]
		public Deal Deal
		{
			get
			{
				return this._Deal.Entity;
			}
			set
			{
				Deal previousValue = this._Deal.Entity;
				if (((previousValue != value) 
							|| (this._Deal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deal.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Deal.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._DealId = value.DealId;
					}
					else
					{
						this._DealId = default(int);
					}
					this.SendPropertyChanged("Deal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Outlets")]
	public partial class Outlet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OutletName;
		
		private string _Description;
		
		private string _LoginEmail;
		
		private string _Password;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private int _OutletId;
		
		private EntitySet<Branch> _Branches;
		
		private EntitySet<Deal> _Deals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutletNameChanging(string value);
    partial void OnOutletNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLoginEmailChanging(string value);
    partial void OnLoginEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnOutletIdChanging(int value);
    partial void OnOutletIdChanged();
    #endregion
		
		public Outlet()
		{
			this._Branches = new EntitySet<Branch>(new Action<Branch>(this.attach_Branches), new Action<Branch>(this.detach_Branches));
			this._Deals = new EntitySet<Deal>(new Action<Deal>(this.attach_Deals), new Action<Deal>(this.detach_Deals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OutletName
		{
			get
			{
				return this._OutletName;
			}
			set
			{
				if ((this._OutletName != value))
				{
					this.OnOutletNameChanging(value);
					this.SendPropertyChanging();
					this._OutletName = value;
					this.SendPropertyChanged("OutletName");
					this.OnOutletNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(600) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginEmail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LoginEmail
		{
			get
			{
				return this._LoginEmail;
			}
			set
			{
				if ((this._LoginEmail != value))
				{
					this.OnLoginEmailChanging(value);
					this.SendPropertyChanging();
					this._LoginEmail = value;
					this.SendPropertyChanged("LoginEmail");
					this.OnLoginEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="VarChar(100)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OutletId
		{
			get
			{
				return this._OutletId;
			}
			set
			{
				if ((this._OutletId != value))
				{
					this.OnOutletIdChanging(value);
					this.SendPropertyChanging();
					this._OutletId = value;
					this.SendPropertyChanged("OutletId");
					this.OnOutletIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Outlet_Branch", Storage="_Branches", ThisKey="OutletId", OtherKey="OutletId")]
		public EntitySet<Branch> Branches
		{
			get
			{
				return this._Branches;
			}
			set
			{
				this._Branches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Outlet_Deal", Storage="_Deals", ThisKey="OutletId", OtherKey="OutletId")]
		public EntitySet<Deal> Deals
		{
			get
			{
				return this._Deals;
			}
			set
			{
				this._Deals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Outlet = this;
		}
		
		private void detach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.Outlet = null;
		}
		
		private void attach_Deals(Deal entity)
		{
			this.SendPropertyChanging();
			entity.Outlet = this;
		}
		
		private void detach_Deals(Deal entity)
		{
			this.SendPropertyChanging();
			entity.Outlet = null;
		}
	}
}
#pragma warning restore 1591
